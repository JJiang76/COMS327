
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2285
# define rand_under(17,357
# define rand_range(21,500
# define UNUSED(22,573
#define malloc(24,604
typedef struct corridor_path 30,748
  heap_node_t *hn;hn31,779
  uint8_t pos[pos32,798
  uint8_t from[from33,816
  int32_t cost;34,835
} corridor_path_t;35,851
typedef enum dim 37,871
  dim_x,38,890
  dim_y,39,899
  num_dims40,908
} dim_t;41,919
typedef int16_t pair_t[pair_t43,929
#define DUNGEON_X 45,964
#define DUNGEON_Y 46,998
#define MIN_ROOMS 47,1032
#define MAX_ROOMS 48,1065
#define ROOM_MIN_X 49,1099
#define ROOM_MIN_Y 50,1132
#define ROOM_MAX_X 51,1165
#define ROOM_MAX_Y 52,1199
#define mappair(54,1234
#define mapxy(55,1291
#define hardnesspair(56,1326
#define hardnessxy(57,1393
typedef enum __attribute__ ((__packed__)) terrain_type 59,1439
  ter_debug,60,1496
  ter_wall,61,1509
  ter_wall_immutable,62,1521
  ter_floor,63,1543
  ter_floor_room,64,1556
  ter_floor_hall,65,1574
  ter_stairs,66,1592
  ter_stairs_up,67,1606
  ter_stairs_down68,1623
} terrain_type_t;69,1641
typedef struct room 71,1660
  pair_t position;72,1682
  pair_t size;73,1701
} room_t;74,1716
typedef struct dungeon 76,1727
  uint32_t num_rooms;77,1752
  room_t *rooms;rooms78,1774
  terrain_type_t map[map79,1791
  uint8_t hardness[hardness88,2444
} dungeon_t;89,2486
typedef struct pc 91,2500
  uint8_t x,92,2520
  uint8_t x, y;92,2520
} pc_t;93,2536
static uint32_t in_room(95,2545
static uint32_t adjacent_to_room(111,2936
static uint32_t is_open_space(119,3197
static int32_t corridor_path_cmp(124,3296
static void dijkstra_corridor(128,3446
static void dijkstra_corridor_inv(227,7181
#define hardnesspair_inv(280,8501
static int connect_two_rooms(330,11172
static int create_cycle(349,11824
static int connect_rooms(391,13389
int gaussian[gaussian404,13582
typedef struct queue_node 412,13738
  int x,413,13766
  int x, y;413,13766
  struct queue_node *next;next414,13778
} queue_node_t;415,13805
static int smooth_hardness(417,13822
static int empty_dungeon(571,17996
static int place_rooms(590,18372
static void place_stairs(627,19559
static int make_rooms(649,20188
int gen_dungeon(673,20737
void render_dungeon(686,20899
void delete_dungeon(722,21664
void init_dungeon(726,21703
int main(731,21760
