
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3071
#define DUMP_HARDNESS_IMAGES 15,245
# define rand_under(19,390
# define rand_range(23,533
# define UNUSED(24,606
#define malloc(26,637
typedef struct corridor_path 32,781
  heap_node_t *hn;hn33,812
  uint8_t pos[pos34,831
  uint8_t from[from35,849
  int32_t cost;36,868
} corridor_path_t;37,884
typedef enum dim 40,905
  dim_x,41,924
  dim_y,42,933
  num_dims43,942
} dim_t;44,953
typedef int8_t pair_t[pair_t46,963
#define DUNGEON_X 48,997
#define DUNGEON_Y 49,1031
#define MIN_ROOMS 50,1065
#define MAX_ROOMS 51,1098
#define ROOM_MIN_X 52,1132
#define ROOM_MIN_Y 53,1165
#define ROOM_MAX_X 54,1198
#define ROOM_MAX_Y 55,1232
#define SAVE_DIR 56,1266
#define DUNGEON_SAVE_FILE 57,1307
#define DUNGEON_SAVE_SEMANTIC 58,1348
#define DUNGEON_SAVE_VERSION 59,1394
#define mappair(61,1429
#define mapxy(62,1486
#define hardnesspair(63,1521
#define hardnessxy(64,1588
typedef enum __attribute__ ((__packed__)) terrain_type 66,1634
  ter_debug,67,1691
  ter_wall,68,1704
  ter_wall_immutable,69,1716
  ter_floor,70,1738
  ter_floor_room,71,1751
  ter_floor_hall,72,1769
  ter_stairs,73,1787
  ter_stairs_up,74,1801
  ter_stairs_down75,1818
} terrain_type_t;76,1836
typedef struct room 78,1855
  pair_t position;79,1877
  pair_t size;80,1896
} room_t;81,1911
typedef struct dungeon 83,1922
  uint16_t num_rooms;84,1947
  room_t *rooms;rooms85,1969
  terrain_type_t map[map86,1986
  uint8_t hardness[hardness95,2639
  uint32_t tunnel_map[tunnel_map96,2681
  uint32_t non_tunnel_map[non_tunnel_map97,2726
  pair_t pc;98,2775
} dungeon_t;99,2788
static uint32_t in_room(101,2802
static uint32_t adjacent_to_room(117,3193
static uint32_t is_open_space(125,3454
static int32_t corridor_path_cmp(130,3553
static void dijkstra_corridor(134,3703
static void dijkstra_corridor_inv(233,7438
#define hardnesspair_inv(286,8758
static void dijkstra_nontunnel(333,11218
static void dijkstra_tunnel(394,12742
static int connect_two_rooms(458,14458
static int create_cycle(477,15110
static int connect_rooms(519,16675
int gaussian[gaussian532,16868
typedef struct queue_node 540,17024
  int x,541,17052
  int x, y;541,17052
  struct queue_node *next;next542,17064
} queue_node_t;543,17091
static int smooth_hardness(545,17108
static int empty_dungeon(704,21377
static int place_rooms(723,21753
static void place_stairs(760,22940
static int make_rooms(782,23569
int gen_dungeon(805,24130
void render_dungeon(818,24292
void render_non_tunnel_map(858,25218
void render_tunnel_map(879,25645
void delete_dungeon(900,26063
void init_dungeon(905,26120
int write_dungeon_map(910,26177
int write_rooms(923,26406
uint16_t count_up_stairs(945,26878
uint16_t count_down_stairs(961,27129
int write_stairs(977,27384
uint32_t calculate_dungeon_size(1009,28139
int makedirectory(1020,28610
int write_dungeon(1055,29246
int read_dungeon_map(1121,30783
int read_stairs(1144,31381
int read_rooms(1167,31858
int read_dungeon(1225,33776
int read_pgm(1306,35633
void usage(1391,38036
int main(1401,38246
